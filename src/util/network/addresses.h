/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#pragma once

#include <QList>
#include <QPair>
#include <QString>
#include <QMetaType>
#include "networkconfig.h"

class QHostAddress;

namespace LeechCraft
{
namespace Util
{
	typedef QList<QPair<QString, QString>> AddrList_t;

	/** @brief Returns all local addresses.
	 *
	 * This function returns all local addresses in the UP state,
	 * serialized into a human-readable string and paired with the given
	 * given \em port.
	 *
	 * The local addresses are the ones in the following subnets:
	 * - 10.0.0.0/8
	 * - 172.16.0.0/12
	 * - 192.168.0.0/16
	 *
	 * @param[in] port The port to pair.
	 *
	 * @return The local addresses.
	 *
	 * @ingroup NetworkUtil
	 */
	UTIL_NETWORK_API AddrList_t GetLocalAddresses (int port = 0);

	/** @brief Returns all addresses likely accessible "from the outside".
	 *
	 * @return All accessible addresses.
	 *
	 * @ingroup NetworkUtil
	 */
	UTIL_NETWORK_API QList<QHostAddress> GetAllAddresses ();
}
}

Q_DECLARE_METATYPE (LeechCraft::Util::AddrList_t)
