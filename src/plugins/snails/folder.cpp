/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "folder.h"

namespace LeechCraft
{
namespace Snails
{
	bool operator== (const Folder& f1, const Folder& f2)
	{
		return f1.Type_ == f2.Type_ && f1.Path_ == f2.Path_;
	}
}
}

QDataStream& operator<< (QDataStream& out, const LeechCraft::Snails::Folder& folder)
{
	out << static_cast<quint8> (1)
			<< static_cast<quint32> (folder.Type_)
			<< folder.Path_;
	return out;
}

QDataStream& operator>> (QDataStream& in, LeechCraft::Snails::Folder& folder)
{
	quint8 version = 0;
	in >> version;
	if (version != 1)
		return in;

	quint32 type = 0;
	in >> type
			>> folder.Path_;

	folder.Type_ = static_cast<LeechCraft::Snails::FolderType> (type);

	return in;
}

