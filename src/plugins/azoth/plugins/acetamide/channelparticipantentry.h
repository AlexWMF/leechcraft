/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2010-2011  Oleg Linkin
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#ifndef LEECHCRAFT_AZOTH_PLUGINS_ACETAMIDE_CHANNELPARTICIPANTENTRY_H
#define LEECHCRAFT_AZOTH_PLUGINS_ACETAMIDE_CHANNELPARTICIPANTENTRY_H

#include <memory>
#include "ircparticipantentry.h"
#include "localtypes.h"

namespace LeechCraft
{
namespace Azoth
{
namespace Acetamide
{
	class IrcAccount;
	class ChannelHandler;

	class ChannelParticipantEntry : public IrcParticipantEntry
	{
		Q_OBJECT

		ChannelHandler *ICH_;
		QList<ChannelRole> Roles_;
	public:
		ChannelParticipantEntry (const QString&,
				ChannelHandler*, IrcAccount* = 0);

		QObject* GetParentCLEntry () const;

		QString GetEntryID () const;
		QString GetHumanReadableID () const;

		void SetGroups (const QStringList&);
		QStringList Groups () const;

		QObject* CreateMessage (IMessage::Type,
				const QString&, const QString&);

		QList<ChannelRole> Roles () const;
		ChannelRole HighestRole ();

		void SetRole (const ChannelRole& role);
		void SetRoles (const QList<ChannelRole>& roles);
		void RemoveRole (const ChannelRole& role);
	private slots:
		void handleWhoIs ();
		void handleWhoWas ();
		void handleWho ();
		void handleCTCPAction (QAction *action);
	};

	typedef std::shared_ptr<ChannelParticipantEntry> ChannelParticipantEntry_ptr;
}
}
}

#endif // LEECHCRAFT_AZOTH_ACETAMIDE_CHANNELPARTICIPANTENTRY_H
