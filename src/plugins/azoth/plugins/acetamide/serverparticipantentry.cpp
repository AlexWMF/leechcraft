/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2010-2011  Oleg Linkin
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "serverparticipantentry.h"
#include <QAction>
#include "clientconnection.h"
#include "ircaccount.h"
#include "ircserverclentry.h"
#include "ircmessage.h"
#include "ircserverhandler.h"


namespace LeechCraft
{
namespace Azoth
{
namespace Acetamide
{
	ServerParticipantEntry::ServerParticipantEntry (const QString& nick,
			IrcServerHandler *ish, IrcAccount *acc)
	: IrcParticipantEntry (nick, acc)
	, ISH_ (ish)
	{
		ServerID_ = ish->GetServerID ();
	}

	QObject* ServerParticipantEntry::GetParentCLEntry () const
	{
		return ISH_->GetCLEntry ();
	}

	QString ServerParticipantEntry::GetEntryID () const
	{
		return Account_->GetAccountName () + "/" +
				ISH_->GetServerID () + "_" + Nick_;
	}

	QString ServerParticipantEntry::GetHumanReadableID () const
	{
		return Nick_ + "_" + ISH_->GetServerID ();
	}

	QStringList ServerParticipantEntry::Groups () const
	{
		return QStringList (tr ("Private chats"));
	}

	void ServerParticipantEntry::SetGroups (const QStringList&)
	{
	}

	QObject* ServerParticipantEntry::CreateMessage (IMessage::Type,
			const QString&, const QString& body)
	{
 		IrcMessage *message = new IrcMessage (IMessage::Type::ChatMessage,
				IMessage::Direction::Out,
				ISH_->GetServerID (),
				Nick_,
				Account_->GetClientConnection ().get ());

		message->SetBody (body);
		message->SetDateTime (QDateTime::currentDateTime ());

		return message;
	}

	void ServerParticipantEntry::SetMessageHistory (QObjectList messages)
	{
		AllMessages_ << messages;
	}

};
};
};
