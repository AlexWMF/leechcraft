/**********************************************************************
 * LeechCraft - modular cross-platform feature rich internet client.
 * Copyright (C) 2006-2014  Georg Rudoy
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#include "accregisterdetailspage.h"
#include <QtDebug>
#include <sodium.h>

namespace LeechCraft
{
namespace Azoth
{
namespace Sarin
{
	AccRegisterDetailsPage::AccRegisterDetailsPage (QWidget *parent)
	: QWidget { parent }
	{
		Ui_.setupUi (this);
	}

	QString AccRegisterDetailsPage::GetId () const
	{
		return Ui_.IdEdit_->text ();
	}

	QString AccRegisterDetailsPage::GetNickname () const
	{
		return Ui_.NickEdit_->text ();
	}

	void AccRegisterDetailsPage::on_GenerateButton__released ()
	{
		unsigned char pk [crypto_box_PUBLICKEYBYTES];
		unsigned char sk [crypto_box_SECRETKEYBYTES];
		crypto_box_keypair (pk, sk);

		std::random_device dev;
		std::uniform_int_distribution<uint32_t> distr { 0, std::numeric_limits<uint32_t>::max () };
		const auto antispam = distr (dev);

		QString idStr;

		uint16_t checksum = 0;
		for (uint i = 0; i < crypto_box_PUBLICKEYBYTES; i += 2)
		{
			const uint16_t halfWord = (pk [i] << 8) + pk [i + 1];
			checksum ^= halfWord;
			idStr += QString { "%1" }.arg (static_cast<uint> (halfWord), 4, 16, QChar { '0' });
		}

		checksum ^= (antispam & 0xffff0000) >> 16;
		checksum ^= (antispam & 0xffff);
		idStr += QString { "%1" }.arg (antispam, 8, 16, QChar { '0' });
		idStr += QString { "%1" }.arg (checksum, 4, 16, QChar { '0' });

		Ui_.IdEdit_->setText (idStr.toUpper ());
	}
}
}
}
